
name: Zicops Course Creator Deployment - Mumbai
run-name: Deployment

# setting concurrency at workflow level
concurrency: Production

# trigger event
on: 
 workflow_dispatch:

      
env:
  # Setting an environment variable with the value of approvers
  prod_approvers: ${{ vars.PRODUCTION_APPROVERS }}
  staging_approvers: ${{ vars.STAGING_APPROVERS }}
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: asia-south1-a
  SERVICE_NAME: zicops-course-creator
  

# Deploy  jobs

jobs:
#Initialize variables based on trigger branch (staging or main)
  Initialize_Staging_Variables:
    runs-on: ubuntu-latest
    environment: Production
    env:
     BRANCH: test
    outputs:
      GKE_CLUSTER: ${{ steps.setvars_staging.outputs.GKE_CLUSTER }}
      NAMESPACE: ${{ steps.setvars_staging.outputs.NAMESPACE }}
      APPROVERS: ${{ steps.setvars_staging.outputs.appr }}
      
    steps:
     - name: Initializing variables
       run: echo "Initializing variables..."
        
     - name: Set variables_staging
       id: setvars_staging
       run: |
        echo "GKE_CLUSTER=zicops-production-cost-one" >> $GITHUB_OUTPUT
        echo "NAMESPACE=staging" >> $GITHUB_OUTPUT
        echo "appr=${{env.staging_approvers}}" >> $GITHUB_OUTPUT
        
  Initialize_Prod_Variables:
    runs-on: ubuntu-latest
    environment: Production
    env:
     BRANCH: test
    outputs:
      GKE_CLUSTER: ${{ steps.setvars.outputs.GKE_CLUSTER }}
      NAMESPACE: ${{ steps.setvars.outputs.NAMESPACE }}
      APPROVERS: ${{ steps.setvars.outputs.appr }}
      
    steps:
     - name: Initializing variables
       run: echo "Initializing variables..."     

     - name: Set variables_production
       id: setvars
       run: |
        echo "GKE_CLUSTER=zicops-dot-com-1" >> $GITHUB_OUTPUT
        echo "NAMESPACE=production" >> $GITHUB_OUTPUT
        echo "appr=${{env.prod_approvers}}" >> $GITHUB_OUTPUT

      
    #Build Docker Image
  Build:
     runs-on: ubuntu-latest
     needs: [Initialize_Staging_Variables, Initialize_Prod_Variables]

     steps:
     - uses: actions/checkout@v2
     - name: Auth GCP service account
       uses: 'google-github-actions/auth@v0'
       with:
         credentials_json: ${{ secrets.GCR_DEVOPS_SERVICE_ACCOUNT_KEY }}
     - name: 'Set up Cloud SDK'
       uses: 'google-github-actions/setup-gcloud@v0'
     - name: 'Use gcloud CLI'
       run: 'gcloud info'
       
     - name: Build the Docker image
       run: |-
         docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${GITHUB_SHA} --build-arg GO_MODULES_TOKEN=${{secrets.GO_MODULES_TOKEN}} .
     - name: add latest tag
       run: |-
        docker tag gcr.io/$PROJECT_ID/$SERVICE_NAME:${GITHUB_SHA} gcr.io/$PROJECT_ID/$SERVICE_NAME:latest    
     - run: |
        gcloud auth configure-docker -q
     - run: |
        gcloud components install gke-gcloud-auth-plugin
        
     - name: Push image to GCP
       run: docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${GITHUB_SHA}
       
     - name: Push image to GCP
       run: docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
       
     - name: replace environment variable in values.yaml
       run:  envsubst '${GITHUB_SHA}' < k8s/zicops-course-creator/values.template.yaml >  k8s/zicops-course-creator/values.yaml
     - name: Install Helm
       run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        
     - name: Deploy to Staging
       run: |
        gcloud container clusters get-credentials  ${{ needs.Initialize_Staging_Variables.outputs.GKE_CLUSTER }} \
          --zone  $GKE_ZONE \
          --project $PROJECT_ID
        helm upgrade -n  ${{ needs.Initialize_Staging_Variables.outputs.NAMESPACE }} zicops-course-creator k8s/zicops-course-creator --install --wait --atomic
        
     - name: Get Approvals for Production
       uses: trstringer/manual-approval@v1
       with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ needs.Initialize_Prod_Variables.outputs.APPROVERS }}
          minimum-approvals: 1
          issue-title: "Deploying to production"
          exclude-workflow-initiator-as-approver: false

     - name: Deploy to Production
       run: |
        gcloud container clusters get-credentials  ${{ needs.Initialize_Prod_Variables.outputs.GKE_CLUSTER }} \
          --zone  $GKE_ZONE \
          --project $PROJECT_ID
        helm upgrade -n  ${{ needs.Initialize_Prod_Variables.outputs.NAMESPACE }} zicops-course-creator k8s/zicops-course-creator --install --wait --atomic   


